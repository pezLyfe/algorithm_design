#python3

import random
import time

def get_fibonacci_last_digit_naive(n):
    if n <= 1:
        return n

    previous = 0
    current  = 1

    for _ in range(n - 1):
        previous, current = current, previous + current

    return current % 10

def get_fib_digit_better(n):
    if n <= 1:
        return n

    previous = 0
    current  = 1

    for _ in range(n - 1):
        previous, current = current, previous + current

    return current % 10

def fib_digit_test(limit):
    
    i = 0
    while i < limit:
        random.seed(a=0)

        n = random.randint(0,20)
        start_naive = time.time()
        x = get_fibonacci_last_digit_naive(n)
        naive_time = time.time() - start_naive

        start_improved = time.time()
        y = get_fib_digit_better(n)
        better_time = time.time() - start_improved

        if x == y:
            print('Test {} passed ok! Naive time is {}, improved time is {}'.format(i, naive_time, better_time))
        else:
            print('Test failed on input {}'.format(n))

fib_digit_test(10)